[
{"title": "MKR Therm Shield", "description": "The MKR Therm Shield is a great addon for MKR family boards, and allows you to connect high quality thermocouplers, and can calculate temperatures from -200 \u00b0C to +700 \u00b0C. An ideal solution to use for ovens, freezers, smokers and similar environments.", "product_url": "https://docs.arduino.cc/hardware/mkr-therm-shield", "tutorials": ["/tutorials/mkr-therm-shield/mkr-therm-shield-basic"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/9ac3fdd0387fd0ba6587d82759624c54/eagle-files.zip"], "troubleshooting": []},
{"title": "MKR Therm Shield", "datasheet": null},
{"title": "MKR ETH Shield", "description": "The MKR ETH Shield is a great solution for projects that require high-speed and reliable connections, such as industrial systems. It features an Ethernet connector, and can be simply mounted on top of any MKR family board.", "product_url": "https://docs.arduino.cc/hardware/mkr-eth-shield", "tutorials": ["/tutorials/mkr-eth-shield/mkr-eth-shield-webserver"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/08e04e42b49ab13eadec9b5c7cb85eff/eagle-files.zip"], "troubleshooting": []},
{"title": "MKR ETH Shield", "datasheet": null},
{"title": "MKR IMU Shield", "description": "The MKR IMU Shield helps you integrate inertial measurements with your projects. Read three-dimensional acceleration, yaw rate and magnetical field by simply mounting it on top of a MKR family board.", "product_url": "https://docs.arduino.cc/hardware/mkr-imu-shield", "tutorials": ["/tutorials/mkr-imu-shield/mkr-imu-shield-basics"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/e39edfbaf25d3cfe993263f675b11020/eagle-files.zip"], "troubleshooting": []},
{"title": "MKR IMU Shield", "datasheet": null},
{"title": "MKR GPS Shield", "description": "The MKR GPS Shield is based on the u-blox SAM-M8Q GNSS (Global Navigation Satellite System) module. It can be used to add GPS to any of your MKR boards.", "product_url": "https://docs.arduino.cc/hardware/mkr-gps-shield", "tutorials": ["/tutorials/mkr-gps-shield/mkr-gps-basic"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/f23d091a13022ba135a2f7cb7323d63e/schematics.pdf"], "troubleshooting": []},
{"title": "MKR GPS Shield", "datasheet": null},
{"title": "MKR Relay Shield", "description": "The MKR Relay Shield has two relays mounted that can be used for loads up to 24 V. It also features two status LEDs and a prototyping area for adding your own components.", "product_url": "https://docs.arduino.cc/hardware/mkr-relay-proto-shield", "tutorials": ["/tutorials/mkr-relay-proto-shield/mkr-relay-shield-basic"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/b10bc21a68e0425f397ca74ec836a50f/schematics.pdf"], "troubleshooting": []},
{"title": "MKR Relay Shield", "datasheet": null},
{"title": "MKR SD Proto Shield", "description": "The MKR SD Proto Shield simply features a Micro SD card holder: the rest is up to you. You can mount smaller displays, or pack it with sensors and actuators of your own choice. It can be simply mounted on top of any MKR family board.", "product_url": "https://docs.arduino.cc/hardware/mkr-sd-proto-shield", "tutorials": ["/tutorials/mkr-sd-proto-shield/mkr-sd-proto-shield-data-logger"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/89e55c690f0eabf5e4041af827c201a3/eagle-files.zip"], "troubleshooting": []},
{"title": "MKR SD Proto Shield", "datasheet": null},
{"title": "MKR MEM Shield", "description": "Add extra flash memory (2 MB) and store larger files on a Micro SD card with the MKR MEM Shield. As a bonus, the shield has a prototyping area, for adding e.g. smaller displays, sensors, actuators and more. Compatible with all MKR family boards.", "product_url": "https://docs.arduino.cc/hardware/mkr-mem-shield", "tutorials": ["/tutorials/mkr-mem-shield/mkr-mem-shield-data-logger"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/aa486db291bcbef23c805c7439a4139f/eagle-files.zip"], "troubleshooting": []},
{"title": "MKR MEM Shield", "datasheet": null},
{"title": "MKR RGB Shield", "description": "The MKR RGB Shield is a great for creating simple light installations out of the box! With 84 programmable RGBs in a 12x7 matrix, you can use it to create scrolling texts, create simple animations or even use it to create retro games.", "product_url": "https://docs.arduino.cc/hardware/mkr-rgb-shield", "tutorials": ["/tutorials/mkr-rgb-shield/mkr-rgb-fade", "/tutorials/mkr-rgb-shield/mkr-rgb-fill-stroke"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/dfb869da8accf671a9c95535f8ba9381/eagle-files.zip"], "troubleshooting": []},
{"title": "MKR RGB Shield", "datasheet": null},
{"title": "MKR CAN Shield", "description": "The MKR CAN Shield is a great addon for MKR family boards, and allows you to connect to a CAN (Controller Area Network) bus, widely used in the automotive industry.", "product_url": "https://docs.arduino.cc/hardware/mkr-can-shield", "tutorials": ["/tutorials/mkr-can-shield/mkr-can-communication"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/cb353d66f5a009a6f66102d180badce6/eagle-files.zip"], "troubleshooting": []},
{"title": "MKR CAN Shield", "datasheet": null},
{"title": "MKR WiFi 1010", "description": "Whether you are looking at building a sensor network connected to your office or home router, or if you want to create a Bluetooth\u00ae Low Energy device sending data to a cellphone, the MKR WiFi 1010 is your one-stop-solution for many of the basic IoT application scenarios.", "product_url": "https://docs.arduino.cc/hardware/mkr-wifi-1010", "tutorials": ["/tutorials/mkr-wifi-1010/atmel-ice", "/tutorials/mkr-wifi-1010/built-in-rgb", "/tutorials/mkr-wifi-1010/connecting-sensors", "/tutorials/mkr-wifi-1010/connecting-to-wifi-network", "/tutorials/mkr-wifi-1010/enabling-ble", "/tutorials/mkr-wifi-1010/hosting-a-webserver", "/tutorials/mkr-wifi-1010/mkr-battery-app-note", "/tutorials/mkr-wifi-1010/mkr-jlink-setup", "/tutorials/mkr-wifi-1010/mqtt-device-to-device", "/tutorials/mkr-wifi-1010/oled-display", "/tutorials/mkr-wifi-1010/powering-with-batteries", "/tutorials/mkr-wifi-1010/rtc-clock", "/tutorials/mkr-wifi-1010/scan-networks", "/tutorials/mkr-wifi-1010/securely-connecting-an-arduino-mkr-wifi-1010-to-aws-iot-core", "/tutorials/mkr-wifi-1010/web-server-ap-mode"], "url_alive": 200, "datasheet": "/static/82b1e2886bb5e14f4f78f7903a1ac51b/ABX00023-datasheet.pdf", "full-pinout": ["/static/a0236255601eff27d8109284ea1b1066/fritzing.fzpz"], "troubleshooting": []},
{"title": "MKR WiFi 1010", "datasheet": "/static/82b1e2886bb5e14f4f78f7903a1ac51b/ABX00023-datasheet.pdf"},
{"title": "MKR WAN 1310", "description": "The Arduino MKR WAN 1310 provides a practical and cost effective solution to add LoRa\u00ae connectivity to projects requiring low power. This open source board can connect to the Arduino IoT Cloud, your own LoRa\u00ae network using the Arduino LoRa\u00ae PRO Gateway, existing LoRaWAN\u00ae infrastructure like The Things Network, or even other boards using the direct connectivity mode.", "product_url": "https://docs.arduino.cc/hardware/mkr-wan-1310", "tutorials": ["/tutorials/mkr-wan-1310/lora-button-press", "/tutorials/mkr-wan-1310/lora-message", "/tutorials/mkr-wan-1310/lora-send-and-receive", "/tutorials/mkr-wan-1310/lora-sensor-data", "/tutorials/mkr-wan-1310/lorawan-regional-parameters", "/tutorials/mkr-wan-1310/mkr-wan-library-examples", "/tutorials/mkr-wan-1310/the-things-network", "/tutorials/mkr-wan-1310/wan-and-gps"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/4d6f5632f29d78760ecf877790a37b38/ABX00029-full-pinout.pdf"], "troubleshooting": []},
{"title": "MKR WAN 1310", "datasheet": null},
{"title": "MKR WAN 1300", "description": "The Arduino MKR WAN 1300 was the first LoRa\u00ae board released by Arduino, as a practical and cost effective solution with minimal power requirements. This open source board can connect to the Arduino IoT Cloud, your own LoRa\u00ae network using the Arduino LoRa\u00ae PRO Gateway, existing LoRaWAN\u00ae infrastructure like The Things Network, or even other boards using the direct connectivity mode.", "product_url": "https://docs.arduino.cc/hardware/mkr-wan-1300", "tutorials": ["/tutorials/mkr-wan-1300/lora-button-press", "/tutorials/mkr-wan-1300/lora-message", "/tutorials/mkr-wan-1300/lora-send-and-receive", "/tutorials/mkr-wan-1300/lora-sensor-data", "/tutorials/mkr-wan-1300/the-things-network"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/56e4f5bef7037ff6d3e450cdfd327de1/ABX00017-full-pinout.pdf"], "troubleshooting": []},
{"title": "MKR WAN 1300", "datasheet": null},
{"title": "MKR Zero", "description": "The Arduino MKR Zero is a development board for music makers! With an SD card holder and dedicated SPI interfaces (SPI1), you are able to play music files without extra hardware.", "product_url": "https://docs.arduino.cc/hardware/mkr-zero", "tutorials": ["/tutorials/mkr-zero/mkr-zero-data-logger", "/tutorials/mkr-zero/mkr-zero-rtc-alarm", "/tutorials/mkr-zero/mkr-zero-rtc-clock"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/eb25af1929df3a7a192dbc48d6ce6cbc/ABX00012-full-pinout.pdf"], "troubleshooting": []},
{"title": "MKR Zero", "datasheet": null},
{"title": "MKR 485 Shield", "description": "The MKR 485 Shield makes it possible to communicate with legacy industrial systems that uses the RS-485 protocol. The shield is simply mounted on a MKR family board, easily turning your old local system into a modern IoT system.", "product_url": "https://docs.arduino.cc/hardware/mkr-485-shield", "tutorials": ["/tutorials/mkr-485-shield/mkr-485-communication"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/f1d568d6f059b9c27ac92cf6244e0dff/eagle-files.zip"], "troubleshooting": []},
{"title": "MKR 485 Shield", "datasheet": null},
{"title": "GIGA R1 WiFi", "description": "The ", "product_url": "https://docs.arduino.cc/hardware/giga-r1-wifi", "tutorials": ["/tutorials/giga-r1-wifi/cheat-sheet", "/tutorials/giga-r1-wifi/giga-audio", "/tutorials/giga-r1-wifi/giga-camera", "/tutorials/giga-r1-wifi/giga-dual-core", "/tutorials/giga-r1-wifi/giga-getting-started", "/tutorials/giga-r1-wifi/giga-micropython", "/tutorials/giga-r1-wifi/giga-usb", "/tutorials/giga-r1-wifi/giga-wifi"], "url_alive": 200, "datasheet": "/static/4fdb6cfd4a358ba0ee04531cf389c52f/ABX00063-datasheet.pdf", "full-pinout": ["/static/fba2f5dee253a3affcd387b2b0ecd7c6/ABX00063-full-pinout.pdf"], "troubleshooting": []},
{"title": "GIGA R1 WiFi", "datasheet": "/static/4fdb6cfd4a358ba0ee04531cf389c52f/ABX00063-datasheet.pdf"},
{"title": "Mega 2560 Rev3", "description": "The 8-bit board with 54 digital pins, 16 analog inputs, and 4 serial ports.", "product_url": "https://docs.arduino.cc/hardware/mega-2560", "tutorials": [], "url_alive": 200, "datasheet": "/static/41849d68fc2440ac31c232eadc400bb6/A000067-datasheet.pdf", "full-pinout": ["/static/e4273dd5557bfe76b4240a02cd22f349/fritzing.fzpz"], "troubleshooting": []},
{"title": "Mega 2560 Rev3", "datasheet": "/static/41849d68fc2440ac31c232eadc400bb6/A000067-datasheet.pdf"},
{"title": "MKR Vidor 4000", "description": "The Arduino MKR Vidor 4000 is without a doubt the most advanced and featured-packed board in the MKR family, and the only one with a FPGA chip on board. With a camera & HDMI connector, a Wi-Fi\u00ae / Bluetooth\u00ae module and up to 25 configurable pins, the sky is really the limit with this board.", "product_url": "https://docs.arduino.cc/hardware/mkr-vidor-4000", "tutorials": ["/tutorials/mkr-vidor-4000/vidor-draw-logo", "/tutorials/mkr-vidor-4000/vidor-enable-cam", "/tutorials/mkr-vidor-4000/vidor-encoder", "/tutorials/mkr-vidor-4000/vidor-gsvhdl", "/tutorials/mkr-vidor-4000/vidor-hosting-a-webserver", "/tutorials/mkr-vidor-4000/vidor-qr-recognition", "/tutorials/mkr-vidor-4000/vidor-quartus-vhdl"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/a51f25723e06a0d9b899bb6f19dc441a/ABX00022-full-pinout.pdf"], "troubleshooting": []},
{"title": "MKR Vidor 4000", "datasheet": null},
{"title": "IoT Bundle", "description": "Arduino IoT Bundle allows you to build your next smart project. Ever wanted an automated house? Or a smart garden? Well, now it\u2019s easy with the Arduino IoT Cloud compatible boards. It means: you can connect devices, visualize data, control and share your projects from anywhere in the world. Whether you\u2019re a beginner or a pro, we have a wide range of plans to make sure you get the features you need.", "product_url": "https://docs.arduino.cc/hardware/iot-bundle", "tutorials": ["/tutorials/iot-bundle/i-love-you-pillow", "/tutorials/iot-bundle/pavlovs-cat", "/tutorials/iot-bundle/plant-communicator", "/tutorials/iot-bundle/puzzlebox", "/tutorials/iot-bundle/the-nerd"], "url_alive": 200, "datasheet": null, "full-pinout": [], "troubleshooting": []},
{"title": "IoT Bundle", "datasheet": null},
{"title": "Due", "description": "The Arduino Due is the first Arduino board based on a 32-bit ARM core microcontroller. With 54 digital input/output pins, 12 analog inputs, 2 DAC and 2 CAN it is the perfect board for powerful larger scale Arduino projects.", "product_url": "https://docs.arduino.cc/hardware/due", "tutorials": ["/tutorials/due/due-extended-spi", "/tutorials/due/due-motor-shield-dc", "/tutorials/due/keyboard-controller", "/tutorials/due/mouse-controller", "/tutorials/due/multiple-blinks", "/tutorials/due/simple-waveform-generator", "/tutorials/due/keyboard-controller", "/tutorials/due/upgrading-16u2-due"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/de243c00e7ed63603bae1c99519c13cb/A000056-full-pinout.pdf"], "troubleshooting": []},
{"title": "Due", "datasheet": null},
{"title": "Opta", "description": "The ", "product_url": "https://docs.arduino.cc/hardware/opta", "tutorials": ["/tutorials/opta/energy-management-application-note", "/tutorials/opta/getting-started", "/tutorials/opta/getting-started-connectivity", "/tutorials/opta/getting-started-with-interrupts", "/tutorials/opta/getting-started-with-modbus-rtu", "/tutorials/opta/getting-started-with-rs485", "/tutorials/opta/mac-address", "/tutorials/opta/home-automation-application-note", "/tutorials/opta/memory-partitioning", "/tutorials/opta/plc-ide-setup-license", "/tutorials/opta/tank-level-app-note"], "url_alive": 200, "datasheet": "/static/b35b2db593b0a203b654c1c17a5e17e6/AFX00001-AFX00002-AFX00003-datasheet.pdf", "full-pinout": ["/static/820c493afe76c7aedca3f4709b12b129/opta-full-pinout.pdf"], "troubleshooting": []},
{"title": "Opta", "datasheet": "/static/b35b2db593b0a203b654c1c17a5e17e6/AFX00001-AFX00002-AFX00003-datasheet.pdf"},
{"title": "Braccio Carrier", "description": "The Arduino\u00ae Braccio Carrier enables you to quickly and efficiently pursue your projects and ideas within e.g. robotics and automation with the Braccio ++. The carrier is equipped with connectors, a display and joystick to enhance the experience.", "product_url": "https://docs.arduino.cc/hardware/braccio-carrier", "tutorials": [], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/f5c065531907ce96e8385b8cd0dff8cc/ABX00032-fritzing.fzpz"], "troubleshooting": []},
{"title": "Braccio Carrier", "datasheet": null},
{"title": "Plant Watering Kit", "description": "Decorating your home with plants is an easy way to bring some life into your day-to-day. The only problem is - those plants need water to survive, and if you forget to pay attention to them for a while you may need to start over. So instead of staying ever vigilant, why not spend an afternoon creating a setup that will let you both monitor the amount of moisture in your plants soil, and water your plants from afar using the ", "product_url": "https://docs.arduino.cc/hardware/plant-watering-kit", "tutorials": ["/tutorials/plant-watering-kit/iot-smart-garden-setup-with-nanorp2040"], "url_alive": 200, "datasheet": null, "full-pinout": [], "troubleshooting": []},
{"title": "Plant Watering Kit", "datasheet": null},
{"title": "Nicla Vision", "description": "The Arduino\u00ae Nicla Vision is a ready-to-use, standalone camera for analyzing and processing images on the edge. Thanks to its 2 MP color camera, smart 6-axis motion sensor, integrated microphone and distance sensor, it is suitable for asset tracking, object recognition and predictive maintenance. Quickly implement sensor nodes to send collected data to the Arduino\u00ae Cloud (or third-party vendor services) via integrated Wi-Fi\u00ae/Bluetooth\u00ae LE connectivity.", "product_url": "https://docs.arduino.cc/hardware/nicla-vision", "tutorials": ["/tutorials/nicla-vision/blob-detection", "/tutorials/nicla-vision/getting-started", "/tutorials/nicla-vision/image-classification", "/tutorials/nicla-vision/microphone-sensor", "/tutorials/nicla-vision/nicla-vision-imu", "/tutorials/nicla-vision/proximity"], "url_alive": 200, "datasheet": "/static/894f8b01fa40754354df20ca49e60fd7/ABX00051-datasheet.pdf", "full-pinout": ["/static/6e9c1946e3264c607feb85d195f0e669/ABX00051-full-pinout.pdf"], "troubleshooting": []},
{"title": "Nicla Vision", "datasheet": "/static/894f8b01fa40754354df20ca49e60fd7/ABX00051-datasheet.pdf"},
{"title": "Make Your UNO Kit", "description": "Build your own Arduino UNO from scratch using raw electronic components! The Make Your UNO Kit includes all electronic components needed to build the classic UNO board, a long with 3D instructions, video & text content to support your journey.", "product_url": "https://docs.arduino.cc/hardware/make-your-uno-kit", "tutorials": [], "url_alive": 200, "datasheet": "/static/5fb0d27d79de30e9f7699d80aa6d394e/AKX00037-datasheet.pdf", "full-pinout": ["/static/b42f32a826bd06182ffa59c69b50108c/ASX00037-full-pinout.pdf"], "troubleshooting": []},
{"title": "Make Your UNO Kit", "datasheet": "/static/5fb0d27d79de30e9f7699d80aa6d394e/AKX00037-datasheet.pdf"},
{"title": "Portenta Machine Control", "description": "The Portenta Machine Control is a fully-centralized, low-power, industrial control unit able to drive equipment and machinery. It can be programmed using the Arduino framework or other embedded development platforms.", "product_url": "https://docs.arduino.cc/hardware/portenta-machine-control", "tutorials": ["/tutorials/portenta-machine-control/can-setup", "/tutorials/portenta-machine-control/modbus-setup", "/tutorials/portenta-machine-control/plc-ide-pin-mapping", "/tutorials/portenta-machine-control/plc-ide-setup-license", "/tutorials/portenta-machine-control/plc-programming-introduction", "/tutorials/portenta-machine-control/rtd-thermocouple-pmc"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/4312887f7762913eb5aa3c8a1a2880cd/AKX00032-full-pinout.pdf"], "troubleshooting": []},
{"title": "Portenta Machine Control", "datasheet": null},
{"title": "Nicla Voice", "description": "The Arduino\u00ae Nicla Voice packs speech and motion recognition capabilities on the edge into a tiny form factor. The board integrates a dedicated Neural Decision Processor ", "product_url": "https://docs.arduino.cc/hardware/nicla-voice", "tutorials": ["/tutorials/nicla-voice/ei-intruder-detector", "/tutorials/nicla-voice/getting-started-ml", "/tutorials/nicla-voice/user-manual"], "url_alive": 200, "datasheet": "/static/f7a95541265fd3da14a447d1bcf64496/ABX00061-datasheet.pdf", "full-pinout": ["/static/bf3e42f2adad5dcf220f548f024c388a/ABX00061-full-pinout.pdf"], "troubleshooting": []},
{"title": "Nicla Voice", "datasheet": "/static/f7a95541265fd3da14a447d1bcf64496/ABX00061-datasheet.pdf"},
{"title": "WisGate Edge Lite 2", "description": "The WisGate Edge Lite 2 gateway for LoRaWAN\u00ae embeds RAKwireless", "product_url": "https://docs.arduino.cc/hardware/wisgate-edge-lite-2", "tutorials": ["/tutorials/wisgate-edge-lite-2/getting-started", "/tutorials/wisgate-edge-lite-2/update-firmware"], "url_alive": 200, "datasheet": "https://docs.rakwireless.com/Product-Categories/WisGate/RAK7268/Datasheet", "full-pinout": [], "troubleshooting": []},
{"title": "WisGate Edge Lite 2", "datasheet": "https://docs.rakwireless.com/Product-Categories/WisGate/RAK7268/Datasheet"},
{"title": "Nicla Sense ME", "description": "The Nicla Sense ME houses 4 low power sensors in a small footprint enabling powerful data fusion capabilities on the edge. Analyse '", "product_url": "https://docs.arduino.cc/hardware/nicla-sense-me", "tutorials": ["/tutorials/nicla-sense-me/cheat-sheet", "/tutorials/nicla-sense-me/cli-tool", "/tutorials/nicla-sense-me/connecting-to-iot-cloud", "/tutorials/nicla-sense-me/getting-started", "/tutorials/nicla-sense-me/use-as-mkr-shield", "/tutorials/nicla-sense-me/web-ble-dashboard"], "url_alive": 200, "datasheet": "/static/006b1a38d5f96a2c9c4032b38a6d06ee/ABX00050-datasheet.pdf", "full-pinout": ["/static/b35956b631d757a0455c286da441641b/ABX00050-full-pinout.pdf"], "troubleshooting": []},
{"title": "Nicla Sense ME", "datasheet": "/static/006b1a38d5f96a2c9c4032b38a6d06ee/ABX00050-datasheet.pdf"},
{"title": "MKR ENV Shield", "description": "The MKR ENV Shield is a perfect addon for the MKR family series, and is capable of reading temperature, humidity, light and pressure. The data is acquired easily through an easy-to-use library, and has an SD card slot for offline data logging.", "product_url": "https://docs.arduino.cc/hardware/mkr-env-shield", "tutorials": ["/tutorials/mkr-env-shield/mkr-env-shield-basic"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/8a01039b723328da7ecff14c542d6471/schematics.pdf"], "troubleshooting": []},
{"title": "MKR ENV Shield", "datasheet": null},
{"title": "WisGate Edge Pro", "description": "The WisGate Edge Pro gateway for LoRaWAN\u00ae embeds RAKWireless", "product_url": "https://docs.arduino.cc/hardware/wisgate-edge-pro", "tutorials": ["/tutorials/wisgate-edge-pro/getting-started", "/tutorials/wisgate-edge-pro/pole-mounting", "/tutorials/wisgate-edge-pro/update-firmware"], "url_alive": 200, "datasheet": "https://docs.rakwireless.com/Product-Categories/WisGate/RAK7289/Datasheet", "full-pinout": [], "troubleshooting": []},
{"title": "WisGate Edge Pro", "datasheet": "https://docs.rakwireless.com/Product-Categories/WisGate/RAK7289/Datasheet"},
{"title": "Edge Control", "description": "A remote monitoring and control solution, optimized for outdoor environments. Collect real-time data from smart sensors and leverage all on the edge.", "product_url": "https://docs.arduino.cc/hardware/edge-control", "tutorials": ["/tutorials/edge-control/getting-started-edge-control", "/tutorials/edge-control/motorized-ball-valve", "/tutorials/edge-control/smart-irrigation-system"], "url_alive": 200, "datasheet": "/static/41dd58eb735f67ba9c044ff5d0195742/AKX00034-rev-1-datasheet.pdf", "full-pinout": ["/static/4422ce1db317fabca249d3cf743ec8ac/AKX00034-full-pinout.pdf"], "troubleshooting": []},
{"title": "Edge Control", "datasheet": "/static/41dd58eb735f67ba9c044ff5d0195742/AKX00034-rev-1-datasheet.pdf"},
{"title": "Edge Control Enclosure Kit", "description": "The Edge Control Enclosure Kit provides a full enclosure for the Edge Control.", "product_url": "https://docs.arduino.cc/hardware/enclosure-kit", "tutorials": ["/tutorials/enclosure-kit/assembly-instructions"], "url_alive": 200, "datasheet": null, "full-pinout": [], "troubleshooting": []},
{"title": "Edge Control Enclosure Kit", "datasheet": null},
{"title": "Portenta Max Carrier", "description": "Transform your Portenta board to an edge computer solution with the Portenta Max Carrier.", "product_url": "https://docs.arduino.cc/hardware/portenta-max-carrier", "tutorials": ["/tutorials/portenta-max-carrier/catm1-and-nbiot", "/tutorials/portenta-max-carrier/connecting-to-ttn", "/tutorials/portenta-max-carrier/getting-started", "/tutorials/portenta-max-carrier/x8-getting-started"], "url_alive": 200, "datasheet": "/static/0f0efbc175aa6ff71f9ae3dfc9941f43/ABX00043-datasheet.pdf", "full-pinout": ["/static/d0bd73b17e97af0fe376b7d518b18660/ABX00043-full-pinout.pdf"], "troubleshooting": []},
{"title": "Portenta Max Carrier", "datasheet": "/static/0f0efbc175aa6ff71f9ae3dfc9941f43/ABX00043-datasheet.pdf"},
{"title": "Portenta Vision Shield", "description": "The Portenta Vision Shield brings industry-rated features to your Arduino Portenta. This hardware add-on will let you run embedded computer vision applications, connect wirelessly or via Ethernet to the Arduino Cloud or your own infrastructure, and activate your system upon the detection of sound events.", "product_url": "https://docs.arduino.cc/hardware/portenta-vision-shield", "tutorials": ["/tutorials/portenta-vision-shield/blob-detection", "/tutorials/portenta-vision-shield/camera-to-bitmap-sd-card", "/tutorials/portenta-vision-shield/connecting-to-ttn", "/tutorials/portenta-vision-shield/creating-basic-face-filter", "/tutorials/portenta-vision-shield/custom-machine-learning-model", "/tutorials/portenta-vision-shield/ethernet-with-ide", "/tutorials/portenta-vision-shield/ethernet-with-openmv", "/tutorials/portenta-vision-shield/getting-started-camera", "/tutorials/portenta-vision-shield/speech-recognition-engine", "/tutorials/portenta-vision-shield/things-network-openmv"], "url_alive": 200, "datasheet": "/static/52bde8a3bb7b2216c027da98b6dbe25c/ASX00026-datasheet.pdf", "full-pinout": ["/static/2015f15835b9d03a21fd824616ff4e57/ASX00021-ASX00026-full-pinout.pdf"], "troubleshooting": []},
{"title": "Portenta Vision Shield", "datasheet": "/static/52bde8a3bb7b2216c027da98b6dbe25c/ASX00026-datasheet.pdf"},
{"title": "Portenta Cat. M1/NB IoT GNSS Shield", "description": "Unleash global connectivity and localization capabilities of your Portenta or MKR board with the Arduino\u00ae Portenta Cat. M1/NB IoT GNSS Shield. This shield enables cellular connectivity to both Cat. M1 and NB-IoT networks with the option to use eSIM technology. Easily track your valuable assets across the city worldwide with your choice of GPS, GLONASS, Galileo or BeiDou.", "product_url": "https://docs.arduino.cc/hardware/portenta-cat-m1-nb-iot-gnss-shield", "tutorials": ["/tutorials/portenta-cat-m1-nb-iot-gnss-shield/cheat-sheet", "/tutorials/portenta-cat-m1-nb-iot-gnss-shield/getting-started"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/284304887b327e7abb4c9687d8953944/ASX00027-schematics.pdf"], "troubleshooting": []},
{"title": "Portenta Cat. M1/NB IoT GNSS Shield", "datasheet": null},
{"title": "Portenta Breakout", "description": "Arduino Portenta Breakout board is designed to help hardware engineers and makers to prototype and help test devices connections and capacity within the Portenta family boards (e.g. the Portenta H7).", "product_url": "https://docs.arduino.cc/hardware/portenta-breakout", "tutorials": ["/tutorials/portenta-breakout/breakout-jlink-setup", "/tutorials/portenta-breakout/getting-started"], "url_alive": 200, "datasheet": "/static/0044399b58e288538468c154c3b5d04c/ASX00031-datasheet.pdf", "full-pinout": ["/static/8d54d1a01d6174ed60fc9698e881ad4c/ASX00031-full-pinout.pdf"], "troubleshooting": []},
{"title": "Portenta Breakout", "datasheet": "/static/0044399b58e288538468c154c3b5d04c/ASX00031-datasheet.pdf"},
{"title": "Portenta X8", "description": "Portenta X8 offers the best of two approaches: flexibility of usage with Linux combined with real-time applications through the Arduino environment. The board comes with a Linux OS (Yocto) distribution, already preloaded onboard.", "product_url": "https://docs.arduino.cc/hardware/portenta-x8", "tutorials": ["/tutorials/portenta-x8/user-manual", "/tutorials/portenta-x8/x8-fundamentals", "/tutorials/portenta-x8/uploading-sketches-m4", "/tutorials/portenta-x8/python-arduino-data-exchange", "/tutorials/portenta-x8/docker-container", "/tutorials/portenta-x8/waves-fleet-managment", "/tutorials/portenta-x8/custom-container", "/tutorials/portenta-x8/image-building", "/tutorials/portenta-x8/image-flashing", "/tutorials/portenta-x8/datalogging-iot", "/tutorials/portenta-x8/display-output-webgl", "/tutorials/portenta-x8/multi-protocol-gateway", "/tutorials/portenta-x8/wordpress-webserver"], "url_alive": 200, "datasheet": "/static/5bd8e546d614f3f9708d62687c3be90d/ABX00049-datasheet.pdf", "full-pinout": ["/static/019dd9ac3b08f48192dcb1291d37aab9/ABX00049-full-pinout.pdf"], "troubleshooting": []},
{"title": "Portenta X8", "datasheet": "/static/5bd8e546d614f3f9708d62687c3be90d/ABX00049-datasheet.pdf"},
{"title": "Portenta C33", "description": "The Portenta C33 is a powerful System-on-Module based on the Renesas RA6M5 microcontroller group, which utilizes the high-performance Arm\u00ae Cortex\u00ae-M33 core. The Portenta C33 shares the same form factor as the Portenta H7 and is backward compatible with it, making it fully compatible with all Portenta family shields and carriers through its High-Density connectors.", "product_url": "https://docs.arduino.cc/hardware/portenta-c33", "tutorials": ["/tutorials/portenta-c33/energy-meter-application-note", "/tutorials/portenta-c33/user-manual"], "url_alive": 200, "datasheet": "/static/5dac90c9ef8670908c7d7d7e403954ec/ABX00074-datasheet.pdf", "full-pinout": ["/static/903c16295f3bf076c2ed23eb1b38791c/ABX00074-full-pinout.pdf"], "troubleshooting": []},
{"title": "Portenta C33", "datasheet": "/static/5dac90c9ef8670908c7d7d7e403954ec/ABX00074-datasheet.pdf"},
{"title": "Portenta H7 Lite Connected", "description": "The Portenta H7 Lite Connected follows the Arduino MKR form factor, but enhanced with the Portenta family 80 pin high-density connector. Program it with high-level languages and AI while performing low-latency operations on its customizable hardware.", "product_url": "https://docs.arduino.cc/hardware/portenta-h7-lite-connected", "tutorials": ["/tutorials/portenta-h7-lite-connected/ble-connectivity", "/tutorials/portenta-h7-lite-connected/dual-core-processing", "/tutorials/portenta-h7-lite-connected/flash-optimized-key-value-store", "/tutorials/portenta-h7-lite-connected/getting-started-openmv-micropython", "/tutorials/portenta-h7-lite-connected/lauterbach-debugger", "/tutorials/portenta-h7-lite-connected/micropython-installation", "/tutorials/portenta-h7-lite-connected/over-the-air-update", "/tutorials/portenta-h7-lite-connected/reading-writing-flash-memory", "/tutorials/portenta-h7-lite-connected/secure-boot", "/tutorials/portenta-h7-lite-connected/setting-up-portenta", "/tutorials/portenta-h7-lite-connected/speech-recognition-engine", "/tutorials/portenta-h7-lite-connected/usb-host", "/tutorials/portenta-h7-lite-connected/wifi-access-point"], "url_alive": 200, "datasheet": "/static/b014ead727ba3d4ee979e4005d534ac9/ABX00042-ABX00045-ABX00046-datasheet.pdf", "full-pinout": ["/static/6ef9dc6c7fc85b62587cce33c69cf5d8/ABX00046-schematics.pdf"], "troubleshooting": []},
{"title": "Portenta H7 Lite Connected", "datasheet": "/static/b014ead727ba3d4ee979e4005d534ac9/ABX00042-ABX00045-ABX00046-datasheet.pdf"},
{"title": "Portenta H7", "description": "The Portenta H7 follows the Arduino MKR form factor, but enhanced with the Portenta family 80 pin high-density connector. Program it with high-level languages and AI while performing low-latency operations on its customizable hardware.", "product_url": "https://docs.arduino.cc/hardware/portenta-h7", "tutorials": ["/tutorials/portenta-h7/ble-connectivity", "/tutorials/portenta-h7/creating-gui-with-lvgl", "/tutorials/portenta-h7/dual-core-processing", "/tutorials/portenta-h7/flash-optimized-key-value-store", "/tutorials/portenta-h7/getting-started-openmv-micropython", "/tutorials/portenta-h7/lauterbach-debugger", "/tutorials/portenta-h7/micropython-installation", "/tutorials/portenta-h7/openmv-cheat-sheet", "/tutorials/portenta-h7/over-the-air-update", "/tutorials/portenta-h7/reading-writing-flash-memory", "/tutorials/portenta-h7/secure-boot", "/tutorials/portenta-h7/setting-up-portenta", "/tutorials/portenta-h7/speech-recognition-engine", "/tutorials/portenta-h7/updating-the-bootloader", "/tutorials/portenta-h7/usb-host", "/tutorials/portenta-h7/wifi-access-point"], "url_alive": 200, "datasheet": "/static/1a5be0b41528d8873d97eee52e1011c3/ABX00042-ABX00045-ABX00046-datasheet.pdf", "full-pinout": ["/static/2d38006e78d2abc588a80f12bb9c0c70/ABX00042-full-pinout.pdf"], "troubleshooting": []},
{"title": "Portenta H7", "datasheet": "/static/1a5be0b41528d8873d97eee52e1011c3/ABX00042-ABX00045-ABX00046-datasheet.pdf"},
{"title": "Portenta H7 Lite", "description": "The Portenta H7 Lite follows the Arduino MKR form factor, but enhanced with the Portenta family 80 pin high-density connector. Program it with high-level languages and AI while performing low-latency operations on its customizable hardware.", "product_url": "https://docs.arduino.cc/hardware/portenta-h7-lite", "tutorials": ["/tutorials/portenta-h7-lite/dual-core-processing", "/tutorials/portenta-h7-lite/flash-optimized-key-value-store", "/tutorials/portenta-h7-lite/getting-started-openmv-micropython", "/tutorials/portenta-h7-lite/lauterbach-debugger", "/tutorials/portenta-h7-lite/micropython-installation", "/tutorials/portenta-h7-lite/reading-writing-flash-memory", "/tutorials/portenta-h7-lite/secure-boot", "/tutorials/portenta-h7-lite/setting-up-portenta", "/tutorials/portenta-h7-lite/speech-recognition-engine", "/tutorials/portenta-h7-lite/usb-host"], "url_alive": 200, "datasheet": "/static/1a5be0b41528d8873d97eee52e1011c3/ABX00042-ABX00045-ABX00046-datasheet.pdf", "full-pinout": ["/static/27c5aa912992cb40f87cfcbd21699f5a/ABX00045-schematics.pdf"], "troubleshooting": []},
{"title": "Portenta H7 Lite", "datasheet": "/static/1a5be0b41528d8873d97eee52e1011c3/ABX00042-ABX00045-ABX00046-datasheet.pdf"},
{"title": "Nano Every", "description": "The Nano Every is Arduino's smallest board with dimensions of only 45x18mm and a weight under 5 g. The small footprint and low price, make the Nano Every particularly suited for wearable inventions, low cost robotics and interactive projects requiring a small and easy-to-use microcontroller board.", "product_url": "https://docs.arduino.cc/hardware/nano-every", "tutorials": ["/tutorials/nano-every/community-projects", "/tutorials/nano-every/i2c", "/tutorials/nano-every/run-4-uart", "/tutorials/nano-every/uart"], "url_alive": 200, "datasheet": "/static/343e0a735a14e8a14a4a9cb2159c1c5d/ABX00028-datasheet.pdf", "full-pinout": ["/static/ff3f453bf48a903e37f9f66e11861b36/fritzing.fzpz"], "troubleshooting": []},
{"title": "Nano Every", "datasheet": "/static/343e0a735a14e8a14a4a9cb2159c1c5d/ABX00028-datasheet.pdf"},
{"title": "Nano Screw Terminal Adapter", "description": "The Nano Screw Terminal Adapter is a simple design that allows you to create robust designs with your Nano boards.", "product_url": "https://docs.arduino.cc/hardware/nano-screw-terminal-adapter", "tutorials": ["/tutorials/nano-screw-terminal-adapter/getting-started-nano-screw-terminal"], "url_alive": 200, "datasheet": "/static/4ff5dff4243b5eb4f9256724e6f922de/ASX00037_ASX00037-3P-datasheet.pdf", "full-pinout": ["/static/334d8f191269624b30e992cfca8a5c41/ASX00037-schematics.pdf"], "troubleshooting": []},
{"title": "Nano Screw Terminal Adapter", "datasheet": "/static/4ff5dff4243b5eb4f9256724e6f922de/ASX00037_ASX00037-3P-datasheet.pdf"},
{"title": "Nano Motor Carrier", "description": "The Nano Motor Carrier provides a quick and easy way to connect and control motors in your Engineering Kit Rev2.", "product_url": "https://docs.arduino.cc/hardware/nano-motor-carrier", "tutorials": ["/tutorials/nano-motor-carrier/nano-matlab-wifi-led", "/tutorials/nano-motor-carrier/nano-simulink-wifi-led"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/2bd6742cd853ccaa4486d6b54d674373/ABX00041-cad-files.zip"], "troubleshooting": []},
{"title": "Nano Motor Carrier", "datasheet": null},
{"title": "Nano 33 IoT", "description": "The Arduino Nano 33 IoT combines the Arduino Nano form factor with an easy point of entry to basic IoT and pico-network applications. Whether you are looking at building a sensor network connected to your office or home router, or if you want to create a Bluetooth\u00ae Low Energy device sending data to a cellphone, the Nano 33 IoT is your one-stop-solution for many of the basic IoT application scenarios.", "product_url": "https://docs.arduino.cc/hardware/nano-33-iot", "tutorials": ["/tutorials/nano-33-iot/bluetooth", "/tutorials/nano-33-iot/i2c", "/tutorials/nano-33-iot/ifttt-connection", "/tutorials/nano-33-iot/imu-accelerometer", "/tutorials/nano-33-iot/imu-gyroscope", "/tutorials/nano-33-iot/iot-cloud", "/tutorials/nano-33-iot/uart", "/tutorials/nano-33-iot/wifi-connection"], "url_alive": 200, "datasheet": "/static/6df6a99b1f2e4ad72e92dac286c65582/ABX00027-datasheet.pdf", "full-pinout": ["/static/16bae4cefc631e5dcf065b057004c6fc/fritzing.fzpz"], "troubleshooting": []},
{"title": "Nano 33 IoT", "datasheet": "/static/6df6a99b1f2e4ad72e92dac286c65582/ABX00027-datasheet.pdf"},
{"title": "Nano 33 BLE Sense Rev2", "description": "The Arduino Nano 33 BLE Sense Rev2 combines a tiny form factor, different environment sensors and the possibility to run AI using TinyML and TensorFlow\u2122 Lite. Whether you are looking at creating your first embedded ML application or you want to use Bluetooth\u00ae Low Energy to connect your project to your phone, the Nano 33 BLE Sense Rev2 will make that journey easy.", "product_url": "https://docs.arduino.cc/hardware/nano-33-ble-sense-rev2", "tutorials": ["/tutorials/nano-33-ble-sense-rev2/barometric-sensor", "/tutorials/nano-33-ble-sense-rev2/ble-device-to-device", "/tutorials/nano-33-ble-sense-rev2/bluetooth", "/tutorials/nano-33-ble-sense-rev2/cheat-sheet", "/tutorials/nano-33-ble-sense-rev2/community-projects", "/tutorials/nano-33-ble-sense-rev2/edge-impulse", "/tutorials/nano-33-ble-sense-rev2/gesture-sensor", "/tutorials/nano-33-ble-sense-rev2/get-started-with-machine-learning", "/tutorials/nano-33-ble-sense-rev2/getting-started-omv", "/tutorials/nano-33-ble-sense-rev2/humidity-and-temperature-sensor", "/tutorials/nano-33-ble-sense-rev2/i2c", "/tutorials/nano-33-ble-sense-rev2/imu-accelerometer", "/tutorials/nano-33-ble-sense-rev2/imu-gyroscope", "/tutorials/nano-33-ble-sense-rev2/imu-magnetometer", "/tutorials/nano-33-ble-sense-rev2/microphone-sensor", "/tutorials/nano-33-ble-sense-rev2/micropython-installation", "/tutorials/nano-33-ble-sense-rev2/proximity-sensor", "/tutorials/nano-33-ble-sense-rev2/rgb-sensor", "/tutorials/nano-33-ble-sense-rev2/speech-recognition-engine", "/tutorials/nano-33-ble-sense-rev2/trace-32", "/tutorials/nano-33-ble-sense-rev2/uart"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/9954a74bd83e85753daa710cb3e36c7d/ABX00069-full-pinout.pdf"], "troubleshooting": []},
{"title": "Nano 33 BLE Sense Rev2", "datasheet": null},
{"title": "Nano RP2040 Connect", "description": "The Arduino Nano RP2040 Connect is the feature packed Arduino Nano board built with Raspberry Pi's new silicon.", "product_url": "https://docs.arduino.cc/hardware/nano-rp2040-connect", "tutorials": ["/tutorials/nano-rp2040-connect/micropython-installation", "/tutorials/nano-rp2040-connect/rp2040-01-technical-reference", "/tutorials/nano-rp2040-connect/rp2040-ap-web-server-rgb", "/tutorials/nano-rp2040-connect/rp2040-ble-device-to-device", "/tutorials/nano-rp2040-connect/rp2040-chromebook-upload", "/tutorials/nano-rp2040-connect/rp2040-data-logger", "/tutorials/nano-rp2040-connect/rp2040-imu-advanced", "/tutorials/nano-rp2040-connect/rp2040-imu-basics", "/tutorials/nano-rp2040-connect/rp2040-iot-cloud", "/tutorials/nano-rp2040-connect/rp2040-microphone-basics", "/tutorials/nano-rp2040-connect/rp2040-openmv-mlc", "/tutorials/nano-rp2040-connect/rp2040-openmv-setup", "/tutorials/nano-rp2040-connect/rp2040-python-api", "/tutorials/nano-rp2040-connect/rp2040-upgrading-nina-firmware", "/tutorials/nano-rp2040-connect/rp2040-web-server-rgb", "/tutorials/nano-rp2040-connect/speech-recognition-engine"], "url_alive": 200, "datasheet": "/static/a81678e0f47665c0047e440c16020ccf/ABX00053-datasheet.pdf", "full-pinout": ["/static/d2e3ac6435af647ae85473266fe1415c/Arduino-Nano-RP2040-fritzing.fzpz"], "troubleshooting": []},
{"title": "Nano RP2040 Connect", "datasheet": "/static/a81678e0f47665c0047e440c16020ccf/ABX00053-datasheet.pdf"},
{"title": "Nano ESP32", "description": "The Arduino Nano ESP32 is the first ever Arduino board based on a ESP32 microcontroller from ", "product_url": "https://docs.arduino.cc/hardware/nano-esp32", "tutorials": ["/tutorials/nano-esp32/cheat-sheet", "/tutorials/nano-esp32/getting-started-nano-esp32"], "url_alive": 200, "datasheet": "/static/c183968dfdc5ef5985540dce28a7f561/ABX00083-datasheet.pdf", "full-pinout": ["/static/f712042dfc42b75d6745293a60d6cd4a/ABX00083-full-pinout.pdf"], "troubleshooting": []},
{"title": "Nano ESP32", "datasheet": "/static/c183968dfdc5ef5985540dce28a7f561/ABX00083-datasheet.pdf"},
{"title": "Nano 33 BLE Sense", "description": "The Arduino Nano 33 BLE Sense combines a tiny form factor, different environment sensors and the possibility to run AI using TinyML and TensorFlow\u2122 Lite. Whether you are looking at creating your first embedded ML application or you want to use Bluetooth\u00ae Low Energy to connect your project to your phone, the Nano 33 BLE Sense will make that journey easy.", "product_url": "https://docs.arduino.cc/hardware/nano-33-ble-sense", "tutorials": ["/tutorials/nano-33-ble-sense/barometric-sensor", "/tutorials/nano-33-ble-sense/ble-device-to-device", "/tutorials/nano-33-ble-sense/ble-sense-python-api", "/tutorials/nano-33-ble-sense/bluetooth", "/tutorials/nano-33-ble-sense/cheat-sheet", "/tutorials/nano-33-ble-sense/community-projects", "/tutorials/nano-33-ble-sense/edge-impulse", "/tutorials/nano-33-ble-sense/gesture-sensor", "/tutorials/nano-33-ble-sense/get-started-with-machine-learning", "/tutorials/nano-33-ble-sense/getting-started-omv", "/tutorials/nano-33-ble-sense/humidity-and-temperature-sensor", "/tutorials/nano-33-ble-sense/i2c", "/tutorials/nano-33-ble-sense/imu-accelerometer", "/tutorials/nano-33-ble-sense/imu-gyroscope", "/tutorials/nano-33-ble-sense/imu-magnetometer", "/tutorials/nano-33-ble-sense/microphone-sensor", "/tutorials/nano-33-ble-sense/micropython-installation", "/tutorials/nano-33-ble-sense/proximity-sensor", "/tutorials/nano-33-ble-sense/rgb-sensor", "/tutorials/nano-33-ble-sense/speech-recognition-engine", "/tutorials/nano-33-ble-sense/trace-32", "/tutorials/nano-33-ble-sense/uart"], "url_alive": 200, "datasheet": "/static/0177e8c8890d7ac68d88fb8e700efa57/ABX00031-datasheet.pdf", "full-pinout": ["/static/d553d9f66e1c361eea938a2af71a0e91/fritzing.fzpz"], "troubleshooting": []},
{"title": "Nano 33 BLE Sense", "datasheet": "/static/0177e8c8890d7ac68d88fb8e700efa57/ABX00031-datasheet.pdf"},
{"title": "Nano", "description": "The Arduino Nano is Arduino's classic breadboard friendly designed board with the smallest dimensions. The Arduino Nano comes with pin headers that allow for an easy attachment onto a breadboard and features a Mini-B USB connector.", "product_url": "https://docs.arduino.cc/hardware/nano", "tutorials": [], "url_alive": 200, "datasheet": "/static/8d2922704148bd5dddaf4b3415488a1c/A000005-datasheet.pdf", "full-pinout": ["/static/11f0c2880b9a2f2add7890e0de0ff192/A000005-full-pinout.pdf"], "troubleshooting": []},
{"title": "Nano", "datasheet": "/static/8d2922704148bd5dddaf4b3415488a1c/A000005-datasheet.pdf"},
{"title": "Ethernet Shield Rev2", "description": "Have an idea for a network project? Connect your Arduino to an ethernet shield and you will quickly be able to start sending sensor data to your network to interact with other gadgets in your home.  ", "product_url": "https://docs.arduino.cc/hardware/ethernet-shield-rev2", "tutorials": ["/tutorials/ethernet-shield-rev2/advanced-chat-server", "/tutorials/ethernet-shield-rev2/barometric-pressure-web-server", "/tutorials/ethernet-shield-rev2/chat-client", "/tutorials/ethernet-shield-rev2/chat-server", "/tutorials/ethernet-shield-rev2/datalogger", "/tutorials/ethernet-shield-rev2/dhcp-address-printer", "/tutorials/ethernet-shield-rev2/dhcp-chat-server", "/tutorials/ethernet-shield-rev2/dns-web-client", "/tutorials/ethernet-shield-rev2/telnet-client", "/tutorials/ethernet-shield-rev2/udp-ntp-client", "/tutorials/ethernet-shield-rev2/udp-send-receive-string", "/tutorials/ethernet-shield-rev2/web-client", "/tutorials/ethernet-shield-rev2/web-client-repeating", "/tutorials/ethernet-shield-rev2/web-server"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/b3d344b701b9646f7fd6f2ba318409f0/eagle-files.zip"], "troubleshooting": []},
{"title": "Ethernet Shield Rev2", "datasheet": null},
{"title": "Nano 33 BLE", "description": "The Arduino Nano 33 BLE shares its pinout with the classic Arduino Nano but builds on the nRF52840 microcontroller with 1MB CPU Flash Memory. Featuring a 9 axis inertial measurement unit and the possibility for Bluetooth\u00ae Low Energy connectivity it can help you to create your next Bluetooth\u00ae Low Energy enabled project.", "product_url": "https://docs.arduino.cc/hardware/nano-33-ble", "tutorials": ["/tutorials/nano-33-ble/ble-python-api", "/tutorials/nano-33-ble/bluetooth", "/tutorials/nano-33-ble/getting-started-omv", "/tutorials/nano-33-ble/i2c", "/tutorials/nano-33-ble/imu-accelerometer", "/tutorials/nano-33-ble/imu-gyroscope", "/tutorials/nano-33-ble/imu-magnetometer", "/tutorials/nano-33-ble/micropython-installation", "/tutorials/nano-33-ble/trace-32", "/tutorials/nano-33-ble/uart"], "url_alive": 200, "datasheet": "/static/43b8659f77f49a8a4972661546a04fcf/ABX00030-datasheet.pdf", "full-pinout": ["/static/d553d9f66e1c361eea938a2af71a0e91/fritzing.fzpz"], "troubleshooting": []},
{"title": "Nano 33 BLE", "datasheet": "/static/43b8659f77f49a8a4972661546a04fcf/ABX00030-datasheet.pdf"},
{"title": "Motor Shield Rev3", "description": "The Arduino Motor Shield allows your arduino to drive DC and stepper motors, relays and solenoids.", "product_url": "https://docs.arduino.cc/hardware/motor-shield-rev3", "tutorials": ["/tutorials/motor-shield-rev3/msr3-controlling-dc-motor"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/6ad0f48959c72877437a8de642d331b9/eagle-files.zip"], "troubleshooting": []},
{"title": "Motor Shield Rev3", "datasheet": null},
{"title": "9 Axis Motion Shield", "description": "Allow your Arduino to measure movement: orientation, acceleration and magnetic field!", "product_url": "https://docs.arduino.cc/hardware/9-axis-motion-shield", "tutorials": [], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/15801a42146060a755111cb514a86719/eagle-files.zip"], "troubleshooting": []},
{"title": "9 Axis Motion Shield", "datasheet": null},
{"title": "4 Relays Shield", "description": "The Arduino 4 Relays Shield allows your Arduino driving high power loads.", "product_url": "https://docs.arduino.cc/hardware/4-relays-shield", "tutorials": ["/tutorials/4-relays-shield/4-relay-shield-basics"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/05b1e574ccc5a0b9b13a455083693670/eagle-files.zip"], "troubleshooting": []},
{"title": "4 Relays Shield", "datasheet": null},
{"title": "Zero", "description": "Arduino Zero is a simple and powerful 32-bit extension of the platform established by the UNO. This board aims to provide a platform for innovative projects in smart IoT devices, wearable technology, high-tech automation, crazy robotics, and much more.", "product_url": "https://docs.arduino.cc/hardware/zero", "tutorials": ["/tutorials/zero/arduino-zero-edbg", "/tutorials/zero/arduino-zero-power-consumption", "/tutorials/zero/debugging-with-zero", "/tutorials/zero/simple-audio-frequency-meter", "/tutorials/zero/weather-audio-notifier", "/tutorials/zero/zero-bootloader-update"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/d011a930447f0b1473e1e4b46be7f3f0/schematics.pdf"], "troubleshooting": []},
{"title": "Zero", "datasheet": null},
{"title": "Y\u00fan Rev2", "description": "The Y\u00fan Rev2, Linux powered board with the Arduino simplicity, is the perfect board for your IoT projects!", "product_url": "https://docs.arduino.cc/hardware/yun-rev2", "tutorials": ["/tutorials/yun-rev2/yun-download-os", "/tutorials/yun-rev2/bridge", "/tutorials/yun-rev2/console-ascii-table", "/tutorials/yun-rev2/console-pixel", "/tutorials/yun-rev2/console-read", "/tutorials/yun-rev2/expanding-yun-disk-space", "/tutorials/yun-rev2/file-write-script", "/tutorials/yun-rev2/http-client", "/tutorials/yun-rev2/http-client-console", "/tutorials/yun-rev2/linux-cli", "/tutorials/yun-rev2/mailbox-read-message", "/tutorials/yun-rev2/process", "/tutorials/yun-rev2/remote-due-blink", "/tutorials/yun-rev2/shell-commands", "/tutorials/yun-rev2/temperature-web-panel", "/tutorials/yun-rev2/time-check", "/tutorials/yun-rev2/wifi-status", "/tutorials/yun-rev2/yun-datalogger", "/tutorials/yun-rev2/yun-first-config", "/tutorials/yun-rev2/yun-package-manager", "/tutorials/yun-rev2/yun-serial-terminal", "/tutorials/yun-rev2/yun-sys-restore", "/tutorials/yun-rev2/yun-sys-upgrade", "/tutorials/yun-rev2/yun-u-boot-reflash", "/tutorials/yun-rev2/yun-updater"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/535f44bf64bf5353d2d331b5662b6172/ABX00020-schematics.pdf"], "troubleshooting": []},
{"title": "Y\u00fan Rev2", "datasheet": null},
{"title": "UNO R3", "description": "The Arduino UNO is the best board to get started with electronics and coding. If this is your first experience tinkering with the platform, the UNO is the most robust board you can start playing with. The UNO is the most used and documented board of the whole Arduino family.", "product_url": "https://docs.arduino.cc/hardware/uno-rev3", "tutorials": ["/tutorials/uno-rev3/AnalogInput", "/tutorials/uno-rev3/AnalogReadSerial", "/tutorials/uno-rev3/Blink", "/tutorials/uno-rev3/DigitalReadSerial", "/tutorials/uno-rev3/board-anatomy", "/tutorials/uno-rev3/intro-to-board", "/tutorials/uno-rev3/matlab-pwm-blink"], "url_alive": 200, "datasheet": "/static/750bb0ba3feed386417bb2757f2052b4/A000066-datasheet.pdf", "full-pinout": ["/static/c57a658e0f7afad334f6f73e82dfd83d/A000066-full-pinout.pdf"], "troubleshooting": []},
{"title": "UNO R3", "datasheet": "/static/750bb0ba3feed386417bb2757f2052b4/A000066-datasheet.pdf"},
{"title": "UNO WiFi Rev2", "description": "The Arduino UNO WiFi Rev2 is the easiest point of entry to basic IoT with the standard form factor of the UNO family. Whether you are looking at building a sensor network connected to your office or home router, or if you want to create a Bluetooth\u00ae Low Energy device sending data to a cellphone, the Arduino UNO WiFi Rev2 is your one-stop-solution for many of the basic IoT application scenarios.", "product_url": "https://docs.arduino.cc/hardware/uno-wifi-rev2", "tutorials": ["/tutorials/uno-wifi-rev2/uno-wifi-r2-chromebook-installation", "/tutorials/uno-wifi-rev2/uno-wifi-r2-hosting-a-webserver", "/tutorials/uno-wifi-rev2/uno-wifi-r2-mqtt-device-to-device", "/tutorials/uno-wifi-rev2/uno-wifi-r2-scan-networks", "/tutorials/uno-wifi-rev2/uno-wifi-r2-web-server-ap-mode"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/d9043827f055a201be10101328efda18/schematics.pdf"], "troubleshooting": []},
{"title": "UNO WiFi Rev2", "datasheet": null},
{"title": "UNO R3 SMD", "description": "The Arduino UNO is the best board to get started with electronics and coding. If this is your first experience tinkering with the platform, the UNO is the most robust board you can start playing with. The UNO is the most used and documented board of the whole Arduino family.", "product_url": "https://docs.arduino.cc/hardware/uno-rev3-smd", "tutorials": ["/tutorials/uno-rev3-smd/AnalogInput", "/tutorials/uno-rev3-smd/AnalogReadSerial", "/tutorials/uno-rev3-smd/Blink", "/tutorials/uno-rev3-smd/DigitalReadSerial", "/tutorials/uno-rev3-smd/matlab-pwm-blink"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/5dbf5b6ecfed88e3f5d059646086ac53/A000073-schematics.pdf"], "troubleshooting": []},
{"title": "UNO R3 SMD", "datasheet": null},
{"title": "UNO R4 WiFi", "description": "The Arduino UNO R4 WiFi is designed around the 32-bit microcontroller RA4M1 from ", "product_url": "https://docs.arduino.cc/hardware/uno-r4-wifi", "tutorials": ["/tutorials/uno-r4-wifi/adc-resolution", "/tutorials/uno-r4-wifi/can", "/tutorials/uno-r4-wifi/cheat-sheet", "/tutorials/uno-r4-wifi/dac", "/tutorials/uno-r4-wifi/eeprom", "/tutorials/uno-r4-wifi/led-matrix", "/tutorials/uno-r4-wifi/r4-wifi-getting-started", "/tutorials/uno-r4-wifi/rtc", "/tutorials/uno-r4-wifi/usb-hid", "/tutorials/uno-r4-wifi/wifi-examples"], "url_alive": 200, "datasheet": "/static/c7b4b6894568354c84229ce01e3b64dc/ABX00087-datasheet.pdf", "full-pinout": ["/static/1ff718e3a20320cd19a240ffbe6a0645/ABX00087-full-pinout.pdf"], "troubleshooting": []},
{"title": "UNO R4 WiFi", "datasheet": "/static/c7b4b6894568354c84229ce01e3b64dc/ABX00087-datasheet.pdf"},
{"title": "UNO R4 Minima", "description": "The Arduino UNO R4 Minima is the first UNO board featuring a 32-bit microcontroller, the RA4M1 from ", "product_url": "https://docs.arduino.cc/hardware/uno-r4-minima", "tutorials": ["/tutorials/uno-r4-minima/adc-resolution", "/tutorials/uno-r4-minima/can", "/tutorials/uno-r4-minima/cheat-sheet", "/tutorials/uno-r4-minima/dac", "/tutorials/uno-r4-minima/debugger", "/tutorials/uno-r4-minima/eeprom", "/tutorials/uno-r4-minima/minima-getting-started", "/tutorials/uno-r4-minima/rtc", "/tutorials/uno-r4-minima/shield-compatibility", "/tutorials/uno-r4-minima/shield-guide", "/tutorials/uno-r4-minima/usb-hid"], "url_alive": 200, "datasheet": "/static/7eda959c34d5155f0b00b1804c8f7827/ABX00080-datasheet.pdf", "full-pinout": ["/static/428ce4aa8c747870381b8de24228413d/ABX00080-full-pinout.pdf"], "troubleshooting": []},
{"title": "UNO R4 Minima", "datasheet": "/static/7eda959c34d5155f0b00b1804c8f7827/ABX00080-datasheet.pdf"},
{"title": "MKR Motor Carrier", "description": "The MKR Motor Carrier makes it easy to control servo, DC and stepper motors. With a number of different built in motor drivers, several easy connectors for motors and batteries and support for encoders, this powerhouse of a carrier is a must for any MKR projects involving motors. ", "product_url": "https://docs.arduino.cc/hardware/mkr-motor-carrier", "tutorials": ["/tutorials/mkr-motor-carrier/mkr-motor-carrier-battery"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/b80920ea2207fe9bb97102bb8ffb3796/eagle-files.zip"], "troubleshooting": []},
{"title": "MKR Motor Carrier", "datasheet": null},
{"title": "UNO Mini Limited Edition", "description": "The Arduino UNO Mini Limited Edition (LE) is a unique black & gold board, that pays tribute to everyone's favorite maker board: ", "product_url": "https://docs.arduino.cc/hardware/uno-mini-le", "tutorials": ["/tutorials/uno-mini-le/AnalogReadSerial", "/tutorials/uno-mini-le/uno-mini-le-guide"], "url_alive": 200, "datasheet": "/static/260c378ae05abe276aa4cb99758a9d21/ABX00062-datasheet.pdf", "full-pinout": ["/static/882e6e1b59cb090698a647213f246a2f/ABX00062-fritzing.fzpz"], "troubleshooting": []},
{"title": "UNO Mini Limited Edition", "datasheet": "/static/260c378ae05abe276aa4cb99758a9d21/ABX00062-datasheet.pdf"},
{"title": "Micro", "description": "The Micro runs on an ATmega32u4 processor with native USB communication. Configure via software whether the board is recognised as a standard Arduino, a mouse or keyboard.", "product_url": "https://docs.arduino.cc/hardware/micro", "tutorials": ["/tutorials/micro/keyboard-press"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/59994142e99a42eea5731bf61b08922b/A000053-full-pinout.pdf"], "troubleshooting": []},
{"title": "Micro", "datasheet": null},
{"title": "Leonardo", "description": "The Leonardo differs from all preceding boards in that the ATmega32u4 has built-in USB communication, eliminating the need for a secondary processor. This allows the Leonardo to appear to a connected computer as a mouse and keyboard, in addition to a virtual (CDC) serial / COM port.", "product_url": "https://docs.arduino.cc/hardware/leonardo", "tutorials": [], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/05f737fc664415f0e33201f8c2078672/schematics.pdf"], "troubleshooting": []},
{"title": "Leonardo", "datasheet": null},
{"title": "MKR IoT Carrier", "description": "The sensors, circuits and display integrated on the MKR IoT Carrier leave you free to focus on prototyping and programming your next IoT projects.", "product_url": "https://docs.arduino.cc/hardware/mkr-iot-carrier", "tutorials": ["/tutorials/mkr-iot-carrier/mkr-iot-carrier-01-technical-reference", "/tutorials/mkr-iot-carrier/smart-garden-project"], "url_alive": 200, "datasheet": "/static/cb71b05d33c6fdedcb8e98c08af208c2/ABX00047-datasheet.pdf", "full-pinout": ["/static/f98f98c10a0af8677134d86dc716594d/ABX00047-full-pinout.pdf"], "troubleshooting": []},
{"title": "MKR IoT Carrier", "datasheet": "/static/cb71b05d33c6fdedcb8e98c08af208c2/ABX00047-datasheet.pdf"},
{"title": "MKR IoT Carrier Rev2", "description": "The sensors, circuits and display integrated on the MKR IoT Carrier Rev2 leaves you free to focus on prototyping and programming your IoT projects.", "product_url": "https://docs.arduino.cc/hardware/mkr-iot-carrier-rev2", "tutorials": ["/tutorials/mkr-iot-carrier-rev2/cheat-sheet"], "url_alive": 200, "datasheet": "/static/6cec8cb2cb66b8f858535dda9359da65/ABX00073-datasheet.pdf", "full-pinout": ["/static/25ff2677c2f71e665ef464e0eb78f3fb/ABX00073-full-pinout.pdf"], "troubleshooting": []},
{"title": "MKR IoT Carrier Rev2", "datasheet": "/static/6cec8cb2cb66b8f858535dda9359da65/ABX00073-datasheet.pdf"},
{"title": "MKR 1000 WiFi", "description": "The Arduino MKR 1000 WiFi is the easiest point of entry to basic IoT and pico-network application design. Whether you are looking at setting up a sensor network for your office or building a smart home, the MKR 1000 WiFi will make that journey easy.", "product_url": "https://docs.arduino.cc/hardware/mkr-1000-wifi", "tutorials": ["/tutorials/mkr-1000-wifi/analog-to-midi", "/tutorials/mkr-1000-wifi/download-and-store-web-data", "/tutorials/mkr-1000-wifi/expose-your-iot-bundle-kit-info-trough-a-wifi-web-server", "/tutorials/mkr-1000-wifi/mkr-1000-battery-life", "/tutorials/mkr-1000-wifi/mkr-1000-connect-to-wifi", "/tutorials/mkr-1000-wifi/mkr-1000-hosting-a-webserver", "/tutorials/mkr-1000-wifi/mkr-1000-mqtt-device-to-device", "/tutorials/mkr-1000-wifi/mkr-1000-scan-networks", "/tutorials/mkr-1000-wifi/mkr-1000-web-server-ap-mode", "/tutorials/mkr-1000-wifi/wifi-101-library-examples", "/tutorials/mkr-1000-wifi/wifi-101-ota"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/e18b52e94d41ee77079e83e171e87242/ABX00004-full-pinout.pdf"], "troubleshooting": []},
{"title": "MKR 1000 WiFi", "datasheet": null},
{"title": "MKR NB 1500", "description": "The Arduino MKR NB 1500 adds Narrowband communication to your projects. It can communicate over NB-IoT and LTE-M networks, and is excellent to use for low-power projects in remote areas. The MKR NB 1500 is also compatible with the Arduino IoT Cloud, making it easy to access wherever you are in the world.", "product_url": "https://docs.arduino.cc/hardware/mkr-nb-1500", "tutorials": ["/tutorials/mkr-nb-1500/mkr-nb-library-examples", "/tutorials/mkr-nb-1500/nb-led-switch", "/tutorials/mkr-nb-1500/nb-recieve-sms", "/tutorials/mkr-nb-1500/nb-scan-network", "/tutorials/mkr-nb-1500/nb-send-sms", "/tutorials/mkr-nb-1500/nb-web-client", "/tutorials/mkr-nb-1500/securely-connecting-an-arduino-nb-1500-to-azure-iot-hub", "/tutorials/mkr-nb-1500/setting-radio-access"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/8a09af345dc31641d964978fda969cc0/ABX00019-full-pinout.pdf"], "troubleshooting": []},
{"title": "MKR NB 1500", "datasheet": null},
{"title": "MKR Connector Carrier", "description": "The MKR Connector Carrier is a really useful extension for MKR family boards. It features 14 grove compatible connectors, which allows you to choose between hundreds of different sensors and actuators for your project.     ", "product_url": "https://docs.arduino.cc/hardware/mkr-connector-carrier", "tutorials": ["/tutorials/mkr-connector-carrier/connector-basics", "/tutorials/mkr-connector-carrier/connector-dht-to-oled"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/19644af8d1df74c225ebd45d4e0adc89/eagle-files.zip"], "troubleshooting": []},
{"title": "MKR Connector Carrier", "datasheet": null},
{"title": "MKR GSM 1400", "description": "The Arduino MKR GSM 1400 is a great starting point for building IoT projects connected to GSM / 3G network. Whether you are looking at building a sensor network for agricultural projects, or for urban data collection, the MKR GSM 1400 is your go-to board for IoT projects when Wi-Fi\u00ae is not available.", "product_url": "https://docs.arduino.cc/hardware/mkr-gsm-1400", "tutorials": ["/tutorials/mkr-gsm-1400/gsm-call-lock", "/tutorials/mkr-gsm-1400/gsm-led-switch", "/tutorials/mkr-gsm-1400/gsm-location", "/tutorials/mkr-gsm-1400/gsm-make-call", "/tutorials/mkr-gsm-1400/gsm-mqtt", "/tutorials/mkr-gsm-1400/gsm-mqtt-env", "/tutorials/mkr-gsm-1400/gsm-receive-call", "/tutorials/mkr-gsm-1400/gsm-receive-sms", "/tutorials/mkr-gsm-1400/gsm-scan-networks", "/tutorials/mkr-gsm-1400/gsm-send-sms", "/tutorials/mkr-gsm-1400/gsm-sms-env", "/tutorials/mkr-gsm-1400/mkr-gsm-library-examples", "/tutorials/mkr-gsm-1400/securely-connecting-a-mkr-gsm-1400-to-google-cloud-iot-core"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/d57147b95d9a6ce882907a4bb72fbc5e/ABX00018-full-pinout.pdf"], "troubleshooting": []},
{"title": "MKR GSM 1400", "datasheet": null},
{"title": "MKR FOX 1200", "description": "The MKR FOX 1200 is your entry point to start working with the European Sigfox networks. The board can easily be added to the Sigfox infrastructure. It also features very low power consumption, and is designed to run on batteries for a longer period of time.", "product_url": "https://docs.arduino.cc/hardware/mkr-fox-1200", "tutorials": ["/tutorials/mkr-fox-1200/sigfox-event-trigger", "/tutorials/mkr-fox-1200/sigfox-first-configuration"], "url_alive": 200, "datasheet": null, "full-pinout": ["/static/4c6b45f689a90b30be4a0b12a5839c05/ABX00014-full-pinout.pdf"], "troubleshooting": []},
{"title": "MKR FOX 1200", "datasheet": null}
]